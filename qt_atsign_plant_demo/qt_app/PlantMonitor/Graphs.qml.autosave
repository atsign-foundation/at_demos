import QtQuick
import QtQuick.Layouts
import QtCharts
import QtQuick.Controls
import PlantMonitor

GridLayout {
    id: root
    columns: 2
    Layout.fillHeight: true
    Layout.fillWidth: true

    Repeater {
        id: repeater
        model: Object.keys(MyMonitor.model)
        delegate: Rectangle {
            Layout.fillHeight: true
            Layout.fillWidth: true
            color: Constants.accentColor

            // ChartView with LineSeries
            ChartView {
                id: chartView
                anchors.fill: parent
                antialiasing: true
                legend.visible: true
                backgroundColor: Constants.accentColor
                theme: AppSettings.isDarkTheme ? ChartView.ChartThemeDark : ChartView.ChartThemeLight

                // X-axis definition
                ValueAxis {
                    id: xAxis
                    min: 0
                    max: 50
                }

                // Y-axis definition
                ValueAxis {
                    id: yAxis
                    min: 0
                    max: 50
                }
                
                LineSeries {
                    id: lineSeries
                    axisX: xAxis
                    axisY: yAxis
                    name: modelData
                    color: "green"

                    Connections {
                        target: MyMonitor

                        function onModel_changed() {
                            //log MyMonitor.dataSize
                            console.log("MyMonitor.dataSize: " + MyMonitor.dataSize)
                            lineSeries.clear()
                            var min = 100
                            var max = 0
                            for (var i = 0; i < MyMonitor.dataSize; i++) {
                                // update min and max compared with MyMonitor.model[modelData][i][1]
                                var y = MyMonitor.model[modelData][i][1]
                                if (y < min) {
                                    min = y
                                    yAxis.min = min
                                }
                                if (y > max) {
                                    max = y
                                    yAxis.max = max
                                }
                                if (max === min) {
                                    yAxis.min = min - 5
                                    yAxis.max = max + 5
                                }

                                lineSeries.append(
                                            MyMonitor.model[modelData][i][0], y)

                                // log what is being appended
                                console.log("appending: " + MyMonitor.model[modelData][i][0] + ", "
                                            + MyMonitor.model[modelData][i][1])
                            }
                        }
                    }
                }
            }
        }
    }
}
